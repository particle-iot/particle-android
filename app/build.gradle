buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.4'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'

apply plugin: 'io.fabric'  /* uncomment for release builds */


ext {
    cloudSdkVersion = '0.5.1'
    setupVersion = '0.6.0'
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId 'io.particle.android.app'
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 79
        versionName "2.2.0-MESH-21"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/main.kotlin_module'
    }
}

// TESTING ONLY: to build against a locally built aars, uncomment these lines, and the
// "compile(name:'cloudsdk', ext:'aar')" lines below, under dependencies.
// (If you don't know what this means or why we (the SDK maintainers at Particle) would want to
// do this, then you can safely ignore all this and keep it commented out. :)
//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

//    implementation "io.particle:cloudsdk:$cloudSdkVersion"
//    implementation("io.particle:devicesetup:$setupVersion") {
    implementation project(':cloudsdk')
    implementation project(':ecjpake4j')
    implementation project(':devicesetup')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.23.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.23.4'
    implementation "io.github.microutils:kotlin-logging:1.5.4"

    // FIXME: look into getting rid of this 3rd party button now that the support lib has a FAB.
    // Support lib doesn't do the "speed dial" pattern off of FABs though, so that would have to be
    // implemented by hand (and as such, might not be worth it.)
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation('com.f2prateek.bundler:bundler:1.1.2') {
        exclude module: 'support-v4'
    }

    releaseImplementation 'com.google.firebase:firebase-perf:16.1.0'
    releaseImplementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'

    // for barcode scanning in Electron setup  // disabled for faster builds since we don't use this right now.
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'com.google.firebase:firebase-ml-vision:17.0.0'
    implementation 'com.google.firebase:firebase-ml-vision-image-label-model:15.0.0'
    implementation 'com.google.firebase:firebase-ml-model-interpreter:16.2.0'

    // Segment
    //noinspection GradleDynamicVersion -- this is what the docs want (even if it's a bad idea)
    releaseImplementation 'com.segment.analytics.android:analytics:4.+'
    //noinspection GradleDynamicVersion -- (see above)
    releaseImplementation 'com.segment.analytics.android.integrations:firebase:+'
    //noinspection GradleDynamicVersion -- (see above)
    releaseImplementation 'com.segment.analytics.android.integrations:intercom:+'

    //noinspection GradleDynamicVersion -- (see above)
    releaseImplementation 'io.intercom.android:intercom-sdk-base:5.+'
    //noinspection GradleDynamicVersion -- (see above)
    releaseImplementation 'io.intercom.android:intercom-sdk-fcm:5.+'

    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.tolstykh.textviewrichdrawable:textview-rich-drawable:0.3.2'
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    // using snapshot to unbreak Butterknife with AndroidX
    implementation 'com.jakewharton:butterknife:9.0.0-SNAPSHOT'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-SNAPSHOT'

    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.core:core-ktx:1.0.0-rc02'
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation "androidx.lifecycle:lifecycle-livedata-core:2.0.0"
    implementation 'androidx.lifecycle:lifecycle-runtime:2.0.0'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0-rc02'

    def nav_version = "1.0.0-alpha06"
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"

    // FIXME: remove explicit dep here later
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.google.protobuf:protobuf-java:3.5.1'
    implementation 'com.squareup.okio:okio:1.14.0'
    implementation 'sk.baka.slf4j:slf4j-handroid:1.7.27'

    testImplementation 'junit:junit:4.12'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

apply plugin: 'com.google.gms.google-services'  /* uncomment for release builds */
